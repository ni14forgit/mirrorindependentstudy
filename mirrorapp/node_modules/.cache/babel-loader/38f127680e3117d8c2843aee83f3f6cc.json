{"ast":null,"code":"var _jsxFileName = \"/Users/nishantiyengar/Desktop/mirrorapp/src/Components/Acne/Acne.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Acne.css\";\nimport Videocam from \"./Videocam/Videocam\";\nimport Results from \"./Results/Results\";\nimport firebase from \"./firestore\";\n\nfunction Acne() {\n  const [webcamShow, setWebcamShow] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [lastImage, setLastImage] = useState(null);\n  useEffect(() => {\n    var today = new Date();\n    var newList = []; // potentially delete below setHistory method\n\n    setHistory([]);\n    const db = firebase.firestore();\n    db.collection(\"measurements\").get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        //console.log(`${doc.id} => ${doc.data().date}`);\n        if (checkWithinMonth(today, doc.data().date)) {\n          var newElement = [doc.data().date, doc.data().value];\n          newList.push(newElement); //setHistory(history => [...history, newElement]);\n\n          console.log(\"added element to state\");\n        } //console.log(`${doc.id} => ${doc.data().value}`);\n\n      });\n    }).then(setHistory(newList));\n  }, []);\n\n  const checkWithinMonth = (todayDate, dataDate) => {\n    var realMonth = Number(todayDate.getMonth()) + 1;\n\n    if (realMonth - Number(dataDate[1]) > 1) {\n      return false;\n    } else if (realMonth - Number(dataDate[1]) == 1) {\n      if (Number(todayDate.getDate()) > Number(dataDate[2])) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  };\n\n  let display;\n\n  if (webcamShow) {\n    display = /*#__PURE__*/React.createElement(Videocam, {\n      toggle: setWebcamShow,\n      sethistory: setHistory,\n      setlastimage: setLastImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    });\n  } else {\n    display = /*#__PURE__*/React.createElement(Results, {\n      data: history,\n      imagesource: lastImage,\n      toggle: setWebcamShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }, display);\n}\n\nexport default Acne;","map":{"version":3,"sources":["/Users/nishantiyengar/Desktop/mirrorapp/src/Components/Acne/Acne.js"],"names":["React","useState","useEffect","Videocam","Results","firebase","Acne","webcamShow","setWebcamShow","history","setHistory","lastImage","setLastImage","today","Date","newList","db","firestore","collection","get","then","querySnapshot","forEach","doc","checkWithinMonth","data","date","newElement","value","push","console","log","todayDate","dataDate","realMonth","Number","getMonth","getDate","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,OAAO,GAAG,EAAd,CAFc,CAGd;;AACAL,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA,UAAMM,EAAE,GAAGX,QAAQ,CAACY,SAAT,EAAX;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,cAAd,EACGC,GADH,GAEGC,IAFH,CAEQC,aAAa,IAAI;AACrBA,MAAAA,aAAa,CAACC,OAAd,CAAsBC,GAAG,IAAI;AAC3B;AACA,YAAIC,gBAAgB,CAACX,KAAD,EAAQU,GAAG,CAACE,IAAJ,GAAWC,IAAnB,CAApB,EAA8C;AAC5C,cAAIC,UAAU,GAAG,CAACJ,GAAG,CAACE,IAAJ,GAAWC,IAAZ,EAAkBH,GAAG,CAACE,IAAJ,GAAWG,KAA7B,CAAjB;AACAb,UAAAA,OAAO,CAACc,IAAR,CAAaF,UAAb,EAF4C,CAG5C;;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,SAP0B,CAQ3B;;AACD,OATD;AAUD,KAbH,EAcGX,IAdH,CAcQV,UAAU,CAACK,OAAD,CAdlB;AAeD,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,QAAMS,gBAAgB,GAAG,CAACQ,SAAD,EAAYC,QAAZ,KAAyB;AAChD,QAAIC,SAAS,GAAGC,MAAM,CAACH,SAAS,CAACI,QAAV,EAAD,CAAN,GAA+B,CAA/C;;AACA,QAAIF,SAAS,GAAGC,MAAM,CAACF,QAAQ,CAAC,CAAD,CAAT,CAAlB,GAAkC,CAAtC,EAAyC;AACvC,aAAO,KAAP;AACD,KAFD,MAEO,IAAIC,SAAS,GAAGC,MAAM,CAACF,QAAQ,CAAC,CAAD,CAAT,CAAlB,IAAmC,CAAvC,EAA0C;AAC/C,UAAIE,MAAM,CAACH,SAAS,CAACK,OAAV,EAAD,CAAN,GAA8BF,MAAM,CAACF,QAAQ,CAAC,CAAD,CAAT,CAAxC,EAAuD;AACrD,eAAO,KAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,KANM,MAMA;AACL,aAAO,IAAP;AACD;AACF,GAbD;;AAeA,MAAIK,OAAJ;;AACA,MAAI/B,UAAJ,EAAgB;AACd+B,IAAAA,OAAO,gBACL,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE9B,aADV;AAEE,MAAA,UAAU,EAAEE,UAFd;AAGE,MAAA,YAAY,EAAEE,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARD,MAQO;AACL0B,IAAAA,OAAO,gBACL,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE7B,OAAf;AAAwB,MAAA,WAAW,EAAEE,SAArC;AAAgD,MAAA,MAAM,EAAEH,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM8B,OAAN,CAAP;AACD;;AAED,eAAehC,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Acne.css\";\nimport Videocam from \"./Videocam/Videocam\";\nimport Results from \"./Results/Results\";\nimport firebase from \"./firestore\";\n\nfunction Acne() {\n  const [webcamShow, setWebcamShow] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [lastImage, setLastImage] = useState(null);\n\n  useEffect(() => {\n    var today = new Date();\n    var newList = [];\n    // potentially delete below setHistory method\n    setHistory([]);\n    const db = firebase.firestore();\n    db.collection(\"measurements\")\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          //console.log(`${doc.id} => ${doc.data().date}`);\n          if (checkWithinMonth(today, doc.data().date)) {\n            var newElement = [doc.data().date, doc.data().value];\n            newList.push(newElement);\n            //setHistory(history => [...history, newElement]);\n            console.log(\"added element to state\");\n          }\n          //console.log(`${doc.id} => ${doc.data().value}`);\n        });\n      })\n      .then(setHistory(newList));\n  }, []);\n\n  const checkWithinMonth = (todayDate, dataDate) => {\n    var realMonth = Number(todayDate.getMonth()) + 1;\n    if (realMonth - Number(dataDate[1]) > 1) {\n      return false;\n    } else if (realMonth - Number(dataDate[1]) == 1) {\n      if (Number(todayDate.getDate()) > Number(dataDate[2])) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  };\n\n  let display;\n  if (webcamShow) {\n    display = (\n      <Videocam\n        toggle={setWebcamShow}\n        sethistory={setHistory}\n        setlastimage={setLastImage}\n      />\n    );\n  } else {\n    display = (\n      <Results data={history} imagesource={lastImage} toggle={setWebcamShow} />\n    );\n  }\n\n  return <div>{display}</div>;\n}\n\nexport default Acne;\n"]},"metadata":{},"sourceType":"module"}