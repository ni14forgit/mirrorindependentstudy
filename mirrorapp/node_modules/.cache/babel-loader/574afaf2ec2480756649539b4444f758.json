{"ast":null,"code":"var _jsxFileName = \"/Users/nishantiyengar/Desktop/mirrorapp/src/Components/Acne/Results/Results.js\";\nimport React from \"react\";\nimport CanvasJSReact from \"../canvas/canvasjs.react\";\nimport \"./Results.css\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nconst style = {\n  border: \"10px solid red\"\n};\n\nconst Results = props => {\n  const newsource = \"data:image/jpeg;base64,\" + props.imagesource;\n  const datahistory = props.data; // const datapoint = input => {\n  //   var answer = [];\n  //   Object.keys(input).map((key, index) =>\n  //     answer.push({ x: new Date(key), y: input[key] })\n  //   );\n  //   return answer;\n  // };\n\n  const datapoint = input => {\n    var answer = [];\n    input.map(xValue => {\n      answer.push({\n        x: new Date(xValue[0]),\n        y: xValue[1]\n      });\n    });\n    return answer;\n  };\n\n  const options = {\n    animationEnabled: true,\n    //border: \"10px solid red\",\n    title: {\n      text: \"Acne Analysis Over Time\"\n    },\n    toolTip: {\n      borderColor: \"white\" //change color\n\n    },\n    axisX: {\n      valueFormatString: \"MMMDD\",\n      lineThickness: 0,\n      gridThickness: 0,\n      title: \"Date\"\n    },\n    axisY: {\n      title: \"Measurement\",\n      lineThickness: 0,\n      gridThickness: 0,\n      prefix: \"\" // includeZero: false\n\n    },\n    data: [{\n      yValueFormatString: \"#,###\",\n      xValueFormatString: \"MMMM\",\n      type: \"spline\",\n      dataPoints: datapoint(datahistory)\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ImageResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: newsource,\n    alt: \"Person\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"canvasjsdiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n    options: options,\n    style: style\n    /* onRef={ref => this.chart = ref} */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggleButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Toggle To Webcam\")));\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/nishantiyengar/Desktop/mirrorapp/src/Components/Acne/Results/Results.js"],"names":["React","CanvasJSReact","CanvasJS","CanvasJSChart","style","border","Results","props","newsource","imagesource","datahistory","data","datapoint","input","answer","map","xValue","push","x","Date","y","options","animationEnabled","title","text","toolTip","borderColor","axisX","valueFormatString","lineThickness","gridThickness","axisY","prefix","yValueFormatString","xValueFormatString","type","dataPoints","toggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAO,eAAP;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AADI,CAAd;;AAIA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAMC,SAAS,GAAG,4BAA4BD,KAAK,CAACE,WAApD;AACA,QAAMC,WAAW,GAAGH,KAAK,CAACI,IAA1B,CAFuB,CAIvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAIC,MAAM,GAAG,EAAb;AACAD,IAAAA,KAAK,CAACE,GAAN,CAAUC,MAAM,IAAI;AAClBF,MAAAA,MAAM,CAACG,IAAP,CAAY;AAAEC,QAAAA,CAAC,EAAE,IAAIC,IAAJ,CAASH,MAAM,CAAC,CAAD,CAAf,CAAL;AAA0BI,QAAAA,CAAC,EAAEJ,MAAM,CAAC,CAAD;AAAnC,OAAZ;AACD,KAFD;AAGA,WAAOF,MAAP;AACD,GAND;;AAQA,QAAMO,OAAO,GAAG;AACdC,IAAAA,gBAAgB,EAAE,IADJ;AAEd;AACAC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAHO;AAMdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,OADN,CACc;;AADd,KANK;AASdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,iBAAiB,EAAE,OADd;AAELC,MAAAA,aAAa,EAAE,CAFV;AAGLC,MAAAA,aAAa,EAAE,CAHV;AAILP,MAAAA,KAAK,EAAE;AAJF,KATO;AAedQ,IAAAA,KAAK,EAAE;AACLR,MAAAA,KAAK,EAAE,aADF;AAELM,MAAAA,aAAa,EAAE,CAFV;AAGLC,MAAAA,aAAa,EAAE,CAHV;AAILE,MAAAA,MAAM,EAAE,EAJH,CAKL;;AALK,KAfO;AAsBdrB,IAAAA,IAAI,EAAE,CACJ;AACEsB,MAAAA,kBAAkB,EAAE,OADtB;AAEEC,MAAAA,kBAAkB,EAAE,MAFtB;AAGEC,MAAAA,IAAI,EAAE,QAHR;AAIEC,MAAAA,UAAU,EAAExB,SAAS,CAACF,WAAD;AAJvB,KADI;AAtBQ,GAAhB;AAgCA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEF,SAAV;AAAqB,IAAA,GAAG,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEa,OADX;AAEE,IAAA,KAAK,EAAEjB;AACP;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAWE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEG,KAAK,CAAC8B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAXF,CADF;AAiBD,CArED;;AAuEA,eAAe/B,OAAf","sourcesContent":["import React from \"react\";\nimport CanvasJSReact from \"../canvas/canvasjs.react\";\nimport \"./Results.css\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst style = {\n  border: \"10px solid red\"\n};\n\nconst Results = props => {\n  const newsource = \"data:image/jpeg;base64,\" + props.imagesource;\n  const datahistory = props.data;\n\n  // const datapoint = input => {\n  //   var answer = [];\n  //   Object.keys(input).map((key, index) =>\n  //     answer.push({ x: new Date(key), y: input[key] })\n  //   );\n  //   return answer;\n  // };\n\n  const datapoint = input => {\n    var answer = [];\n    input.map(xValue => {\n      answer.push({ x: new Date(xValue[0]), y: xValue[1] });\n    });\n    return answer;\n  };\n\n  const options = {\n    animationEnabled: true,\n    //border: \"10px solid red\",\n    title: {\n      text: \"Acne Analysis Over Time\"\n    },\n    toolTip: {\n      borderColor: \"white\" //change color\n    },\n    axisX: {\n      valueFormatString: \"MMMDD\",\n      lineThickness: 0,\n      gridThickness: 0,\n      title: \"Date\"\n    },\n    axisY: {\n      title: \"Measurement\",\n      lineThickness: 0,\n      gridThickness: 0,\n      prefix: \"\"\n      // includeZero: false\n    },\n    data: [\n      {\n        yValueFormatString: \"#,###\",\n        xValueFormatString: \"MMMM\",\n        type: \"spline\",\n        dataPoints: datapoint(datahistory)\n      }\n    ]\n  };\n\n  return (\n    <div className=\"parent\">\n      <div className=\"ImageResult\">\n        <img src={newsource} alt=\"Person\" />\n      </div>\n      <div className=\"canvasjsdiv\">\n        <CanvasJSChart\n          options={options}\n          style={style}\n          /* onRef={ref => this.chart = ref} */\n        />\n      </div>\n      <div className=\"toggleButton\">\n        <button onClick={props.toggle}>Toggle To Webcam</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}