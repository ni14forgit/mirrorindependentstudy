{"ast":null,"code":"var _jsxFileName = \"/Users/nishantiyengar/Desktop/mirrorindependentstudy/mirrorapp/src/Components/Acne/Results/Results.js\";\nimport React from \"react\";\nimport CanvasJSReact from \"../canvas/canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst Results = props => {\n  const newsource = \"data:image/jpeg;base64,\" + props.imagesource;\n  const datahistory = props.data;\n\n  const datapoint = input => {\n    var answer = [];\n    Object.keys(input).map((key, index) => answer.push({\n      x: new Date(key),\n      y: input[key]\n    }));\n    return answer;\n  };\n\n  const options = {\n    animationEnabled: true,\n    title: {\n      text: \"Acne Analysis Over Time\"\n    },\n    axisX: {\n      valueFormatString: \"DD\",\n      title: \"Date\"\n    },\n    axisY: {\n      title: \"Measurement\",\n      prefix: \"\",\n      includeZero: false\n    },\n    data: [{\n      yValueFormatString: \"$#,###\",\n      xValueFormatString: \"MMMM\",\n      type: \"spline\",\n      dataPoints: datapoint(datahistory)\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: newsource,\n    alt: \"Person\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CanvasJSChart, {\n    options: options\n    /* onRef={ref => this.chart = ref} */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Toggle To Webcam\"));\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/nishantiyengar/Desktop/mirrorindependentstudy/mirrorapp/src/Components/Acne/Results/Results.js"],"names":["React","CanvasJSReact","CanvasJS","CanvasJSChart","Results","props","newsource","imagesource","datahistory","data","datapoint","input","answer","Object","keys","map","key","index","push","x","Date","y","options","animationEnabled","title","text","axisX","valueFormatString","axisY","prefix","includeZero","yValueFormatString","xValueFormatString","type","dataPoints","toggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAMC,SAAS,GAAG,4BAA4BD,KAAK,CAACE,WAApD;AACA,QAAMC,WAAW,GAAGH,KAAK,CAACI,IAA1B;;AAEA,QAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAIC,MAAM,GAAG,EAAb;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,GAAnB,CAAuB,CAACC,GAAD,EAAMC,KAAN,KACrBL,MAAM,CAACM,IAAP,CAAY;AAAEC,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAASJ,GAAT,CAAL;AAAoBK,MAAAA,CAAC,EAAEV,KAAK,CAACK,GAAD;AAA5B,KAAZ,CADF;AAGA,WAAOJ,MAAP;AACD,GAND;;AAQA,QAAMU,OAAO,GAAG;AACdC,IAAAA,gBAAgB,EAAE,IADJ;AAEdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAFO;AAKdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,iBAAiB,EAAE,IADd;AAELH,MAAAA,KAAK,EAAE;AAFF,KALO;AASdI,IAAAA,KAAK,EAAE;AACLJ,MAAAA,KAAK,EAAE,aADF;AAELK,MAAAA,MAAM,EAAE,EAFH;AAGLC,MAAAA,WAAW,EAAE;AAHR,KATO;AAcdrB,IAAAA,IAAI,EAAE,CACJ;AACEsB,MAAAA,kBAAkB,EAAE,QADtB;AAEEC,MAAAA,kBAAkB,EAAE,MAFtB;AAGEC,MAAAA,IAAI,EAAE,QAHR;AAIEC,MAAAA,UAAU,EAAExB,SAAS,CAACF,WAAD;AAJvB,KADI;AAdQ,GAAhB;AAwBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEF,SAAV;AAAqB,IAAA,GAAG,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEgB;AACT;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME;AAAQ,IAAA,OAAO,EAAEjB,KAAK,CAAC8B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,CADF;AAUD,CA9CD;;AAgDA,eAAe/B,OAAf","sourcesContent":["import React from \"react\";\nimport CanvasJSReact from \"../canvas/canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst Results = props => {\n  const newsource = \"data:image/jpeg;base64,\" + props.imagesource;\n  const datahistory = props.data;\n\n  const datapoint = input => {\n    var answer = [];\n    Object.keys(input).map((key, index) =>\n      answer.push({ x: new Date(key), y: input[key] })\n    );\n    return answer;\n  };\n\n  const options = {\n    animationEnabled: true,\n    title: {\n      text: \"Acne Analysis Over Time\"\n    },\n    axisX: {\n      valueFormatString: \"DD\",\n      title: \"Date\"\n    },\n    axisY: {\n      title: \"Measurement\",\n      prefix: \"\",\n      includeZero: false\n    },\n    data: [\n      {\n        yValueFormatString: \"$#,###\",\n        xValueFormatString: \"MMMM\",\n        type: \"spline\",\n        dataPoints: datapoint(datahistory)\n      }\n    ]\n  };\n\n  return (\n    <div>\n      <img src={newsource} alt=\"Person\" />\n      <CanvasJSChart\n        options={options}\n        /* onRef={ref => this.chart = ref} */\n      />\n      <button onClick={props.toggle}>Toggle To Webcam</button>\n    </div>\n  );\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}