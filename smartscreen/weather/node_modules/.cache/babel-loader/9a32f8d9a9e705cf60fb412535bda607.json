{"ast":null,"code":"var _jsxFileName = \"/Users/nishantiyengar/Desktop/weather-app/src/App.js\";\nimport React from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nimport { geolocated } from \"react-geolocated\"; //import Geoloc from \"./Geoloc\";\n\nconst API_KEY = \"f58c25cc9e885c84a718f9d225c72ecb\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n      const data = await api_call.json();\n\n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter the values.\"\n        });\n      }\n    };\n\n    this.getGeolocatedWeather = e => {\n      e.preventDefault();\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(displayLocationInfo);\n        navigator.geolocation.getCurrentPosition(apiCallToWeather);\n      } else {\n        console.log(\"not supported\");\n      }\n\n      function displayLocationInfo(position) {\n        const lng = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(`longitude: ${lng} | latitude: ${lat}`);\n      }\n\n      async function apiCallToWeather(position) {\n        const lng = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(`api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${API_KEY}&units=metric`);\n        const api_call = await fetch(`api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${API_KEY}&units=metric`).catch(function (error) {\n          console.log(error.message);\n        });\n        const data = await api_call.json();\n        console.log(data);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-5 title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xs-7 form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getGeolocatedWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Activate Lasers\"), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      humidity: this.state.humidity,\n      city: this.state.city,\n      country: this.state.country,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nishantiyengar/Desktop/weather-app/src/App.js"],"names":["React","Titles","Form","Weather","geolocated","API_KEY","App","Component","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","setState","main","temp","name","sys","weather","getGeolocatedWeather","navigator","geolocation","getCurrentPosition","displayLocationInfo","apiCallToWeather","console","log","position","lng","coords","longitude","lat","latitude","catch","message","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nimport { geolocated } from \"react-geolocated\";\n//import Geoloc from \"./Geoloc\";\n\nconst API_KEY = \"f58c25cc9e885c84a718f9d225c72ecb\";\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  };\n\n  getWeather = async e => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\n    );\n    const data = await api_call.json();\n    if (city && country) {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"Please enter the values.\"\n      });\n    }\n  };\n\n  getGeolocatedWeather = e => {\n    e.preventDefault();\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(displayLocationInfo);\n      navigator.geolocation.getCurrentPosition(apiCallToWeather);\n    } else {\n      console.log(\"not supported\");\n    }\n\n    function displayLocationInfo(position) {\n      const lng = position.coords.longitude;\n      const lat = position.coords.latitude;\n      console.log(`longitude: ${lng} | latitude: ${lat}`);\n    }\n\n    async function apiCallToWeather(position) {\n      const lng = position.coords.longitude;\n      const lat = position.coords.latitude;\n      console.log(\n        `api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${API_KEY}&units=metric`\n      );\n      const api_call = await fetch(\n        `api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${API_KEY}&units=metric`\n      ).catch(function(error) {\n        console.log(error.message);\n      });\n      const data = await api_call.json();\n      console.log(data);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-5 title-container\">\n                  <Titles />\n                </div>\n                <div className=\"col-xs-7 form-container\">\n                  <Form getWeather={this.getWeather} />\n                  <button onClick={this.getGeolocatedWeather}>\n                    Activate Lasers\n                  </button>\n                  <Weather\n                    temperature={this.state.temperature}\n                    humidity={this.state.humidity}\n                    city={this.state.city}\n                    country={this.state.country}\n                    description={this.state.description}\n                    error={this.state.error}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}